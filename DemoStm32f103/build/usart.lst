ARM GAS  /tmp/ccbXzD50.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	MX_USART1_UART_Init
  22              		.thumb
  23              		.thumb_func
  25              	MX_USART1_UART_Init:
  26              	.LFB65:
  27              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart1;
  28:Src/usart.c   **** 
  29:Src/usart.c   **** /* USART1 init function */
  30:Src/usart.c   **** 
  31:Src/usart.c   **** void MX_USART1_UART_Init(void)
ARM GAS  /tmp/ccbXzD50.s 			page 2


  32:Src/usart.c   **** {
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  33:Src/usart.c   **** 
  34:Src/usart.c   ****   huart1.Instance = USART1;
  37              		.loc 1 34 0
  38 0002 0A48     		ldr	r0, .L4
  39 0004 0A4B     		ldr	r3, .L4+4
  40 0006 0360     		str	r3, [r0]
  35:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  41              		.loc 1 35 0
  42 0008 4FF4E133 		mov	r3, #115200
  43 000c 4360     		str	r3, [r0, #4]
  36:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  44              		.loc 1 36 0
  45 000e 0023     		movs	r3, #0
  46 0010 8360     		str	r3, [r0, #8]
  37:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  47              		.loc 1 37 0
  48 0012 C360     		str	r3, [r0, #12]
  38:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  49              		.loc 1 38 0
  50 0014 0361     		str	r3, [r0, #16]
  39:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  51              		.loc 1 39 0
  52 0016 0C22     		movs	r2, #12
  53 0018 4261     		str	r2, [r0, #20]
  40:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  54              		.loc 1 40 0
  55 001a 8361     		str	r3, [r0, #24]
  41:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  56              		.loc 1 41 0
  57 001c C361     		str	r3, [r0, #28]
  42:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  58              		.loc 1 42 0
  59 001e FFF7FEFF 		bl	HAL_UART_Init
  60              	.LVL0:
  61 0022 08B1     		cbz	r0, .L1
  43:Src/usart.c   ****   {
  44:Src/usart.c   ****     Error_Handler();
  62              		.loc 1 44 0
  63 0024 FFF7FEFF 		bl	Error_Handler
  64              	.LVL1:
  65              	.L1:
  66 0028 08BD     		pop	{r3, pc}
  67              	.L5:
  68 002a 00BF     		.align	2
  69              	.L4:
  70 002c 00000000 		.word	huart1
  71 0030 00380140 		.word	1073821696
ARM GAS  /tmp/ccbXzD50.s 			page 3


  72              		.cfi_endproc
  73              	.LFE65:
  75              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  76              		.align	2
  77              		.global	HAL_UART_MspInit
  78              		.thumb
  79              		.thumb_func
  81              	HAL_UART_MspInit:
  82              	.LFB66:
  45:Src/usart.c   ****   }
  46:Src/usart.c   **** 
  47:Src/usart.c   **** }
  48:Src/usart.c   **** 
  49:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  50:Src/usart.c   **** {
  83              		.loc 1 50 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 24
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              	.LVL2:
  88 0000 10B5     		push	{r4, lr}
  89              	.LCFI1:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 4, -8
  92              		.cfi_offset 14, -4
  93 0002 86B0     		sub	sp, sp, #24
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 32
  51:Src/usart.c   **** 
  52:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  96              		.loc 1 52 0
  97 0004 0023     		movs	r3, #0
  98 0006 0293     		str	r3, [sp, #8]
  99 0008 0393     		str	r3, [sp, #12]
 100 000a 0493     		str	r3, [sp, #16]
 101 000c 0593     		str	r3, [sp, #20]
  53:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 102              		.loc 1 53 0
 103 000e 0268     		ldr	r2, [r0]
 104 0010 174B     		ldr	r3, .L9
 105 0012 9A42     		cmp	r2, r3
 106 0014 29D1     		bne	.L6
 107              	.LBB2:
  54:Src/usart.c   ****   {
  55:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  56:Src/usart.c   **** 
  57:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  58:Src/usart.c   ****     /* USART1 clock enable */
  59:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 108              		.loc 1 59 0
 109 0016 03F55843 		add	r3, r3, #55296
 110 001a 9A69     		ldr	r2, [r3, #24]
 111 001c 42F48042 		orr	r2, r2, #16384
 112 0020 9A61     		str	r2, [r3, #24]
 113 0022 9A69     		ldr	r2, [r3, #24]
 114 0024 02F48042 		and	r2, r2, #16384
 115 0028 0092     		str	r2, [sp]
ARM GAS  /tmp/ccbXzD50.s 			page 4


 116 002a 009A     		ldr	r2, [sp]
 117              	.LBE2:
 118              	.LBB3:
  60:Src/usart.c   **** 
  61:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 119              		.loc 1 61 0
 120 002c 9A69     		ldr	r2, [r3, #24]
 121 002e 42F00402 		orr	r2, r2, #4
 122 0032 9A61     		str	r2, [r3, #24]
 123 0034 9B69     		ldr	r3, [r3, #24]
 124 0036 03F00403 		and	r3, r3, #4
 125 003a 0193     		str	r3, [sp, #4]
 126 003c 019B     		ldr	r3, [sp, #4]
 127              	.LBE3:
  62:Src/usart.c   ****     /**USART1 GPIO Configuration
  63:Src/usart.c   ****     PA9     ------> USART1_TX
  64:Src/usart.c   ****     PA10     ------> USART1_RX
  65:Src/usart.c   ****     */
  66:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_9;
 128              		.loc 1 66 0
 129 003e 4FF40073 		mov	r3, #512
 130 0042 0293     		str	r3, [sp, #8]
  67:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 131              		.loc 1 67 0
 132 0044 0223     		movs	r3, #2
 133 0046 0393     		str	r3, [sp, #12]
  68:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 134              		.loc 1 68 0
 135 0048 0323     		movs	r3, #3
 136 004a 0593     		str	r3, [sp, #20]
  69:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 69 0
 138 004c 094C     		ldr	r4, .L9+4
 139 004e 02A9     		add	r1, sp, #8
 140 0050 2046     		mov	r0, r4
 141              	.LVL3:
 142 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL4:
  70:Src/usart.c   **** 
  71:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 144              		.loc 1 71 0
 145 0056 4FF48063 		mov	r3, #1024
 146 005a 0293     		str	r3, [sp, #8]
  72:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 147              		.loc 1 72 0
 148 005c 0023     		movs	r3, #0
 149 005e 0393     		str	r3, [sp, #12]
  73:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 150              		.loc 1 73 0
 151 0060 0493     		str	r3, [sp, #16]
  74:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 152              		.loc 1 74 0
 153 0062 02A9     		add	r1, sp, #8
 154 0064 2046     		mov	r0, r4
 155 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL5:
 157              	.L6:
ARM GAS  /tmp/ccbXzD50.s 			page 5


  75:Src/usart.c   **** 
  76:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
  77:Src/usart.c   **** 
  78:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
  79:Src/usart.c   ****   }
  80:Src/usart.c   **** }
 158              		.loc 1 80 0
 159 006a 06B0     		add	sp, sp, #24
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 8
 162              		@ sp needed
 163 006c 10BD     		pop	{r4, pc}
 164              	.L10:
 165 006e 00BF     		.align	2
 166              	.L9:
 167 0070 00380140 		.word	1073821696
 168 0074 00080140 		.word	1073809408
 169              		.cfi_endproc
 170              	.LFE66:
 172              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 173              		.align	2
 174              		.global	HAL_UART_MspDeInit
 175              		.thumb
 176              		.thumb_func
 178              	HAL_UART_MspDeInit:
 179              	.LFB67:
  81:Src/usart.c   **** 
  82:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  83:Src/usart.c   **** {
 180              		.loc 1 83 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL6:
 185 0000 08B5     		push	{r3, lr}
 186              	.LCFI4:
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 3, -8
 189              		.cfi_offset 14, -4
  84:Src/usart.c   **** 
  85:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 190              		.loc 1 85 0
 191 0002 0268     		ldr	r2, [r0]
 192 0004 064B     		ldr	r3, .L14
 193 0006 9A42     		cmp	r2, r3
 194 0008 09D1     		bne	.L11
  86:Src/usart.c   ****   {
  87:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
  88:Src/usart.c   **** 
  89:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
  90:Src/usart.c   ****     /* Peripheral clock disable */
  91:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 195              		.loc 1 91 0
 196 000a 064A     		ldr	r2, .L14+4
 197 000c 9369     		ldr	r3, [r2, #24]
 198 000e 23F48043 		bic	r3, r3, #16384
 199 0012 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/ccbXzD50.s 			page 6


  92:Src/usart.c   **** 
  93:Src/usart.c   ****     /**USART1 GPIO Configuration
  94:Src/usart.c   ****     PA9     ------> USART1_TX
  95:Src/usart.c   ****     PA10     ------> USART1_RX
  96:Src/usart.c   ****     */
  97:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 200              		.loc 1 97 0
 201 0014 4FF4C061 		mov	r1, #1536
 202 0018 0348     		ldr	r0, .L14+8
 203              	.LVL7:
 204 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 205              	.LVL8:
 206              	.L11:
 207 001e 08BD     		pop	{r3, pc}
 208              	.L15:
 209              		.align	2
 210              	.L14:
 211 0020 00380140 		.word	1073821696
 212 0024 00100240 		.word	1073876992
 213 0028 00080140 		.word	1073809408
 214              		.cfi_endproc
 215              	.LFE67:
 217              		.comm	huart1,64,4
 218              		.text
 219              	.Letext0:
 220              		.file 2 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 221              		.file 3 "/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 222              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 223              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 224              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 225              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 226              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 227              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 228              		.file 10 "Inc/main.h"
ARM GAS  /tmp/ccbXzD50.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccbXzD50.s:20     .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccbXzD50.s:25     .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccbXzD50.s:70     .text.MX_USART1_UART_Init:0000002c $d
                            *COM*:00000040 huart1
     /tmp/ccbXzD50.s:76     .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccbXzD50.s:81     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccbXzD50.s:167    .text.HAL_UART_MspInit:00000070 $d
     /tmp/ccbXzD50.s:173    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccbXzD50.s:178    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccbXzD50.s:211    .text.HAL_UART_MspDeInit:00000020 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
